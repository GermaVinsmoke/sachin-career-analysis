{"version":3,"sources":["feedback/actions.js","components/charts/PieChart.jsx","feedback/FeedbackRes.jsx"],"names":["addData","payload","type","ADD_DATA_REQUEST","readData","READ_DATA_REQUEST","Container","styled","div","PieChart","feedback","datasetData","undefined","i","length","response","data","labels","datasets","backgroundColor","ChartContainer","FeedbackResult","this","props","Component","connect","state"],"mappings":"2GAAA,mGAEaA,EAAU,SAAAC,GAAO,MAAK,CACjCC,KAAMC,mBACNF,YAGWG,EAAW,iBAAO,CAC7BF,KAAMG,uB,8QCJR,IAAMC,E,MAAYC,EAAOC,IAAV,KAoCAC,UA3BE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEZC,EAAc,CAAC,EAAG,GACxB,QAAiBC,IAAbF,EACF,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IACN,QAAzBH,EAASG,GAAGE,SAAoBJ,EAAY,KAC3CA,EAAY,KAIrB,IAAMK,EAAO,CACXC,OAVgB,CAAC,MAAO,MAWxBC,SAAU,CACR,CACEF,KAAML,EACNQ,gBAAiB,CAAC,UAAW,cAKnC,OACE,kBAACb,EAAD,KACE,kBAAC,IAAD,CAAKU,KAAMA,O,wPC7BjB,IAAMI,E,MAAiBb,EAAOC,IAAV,KAKda,E,4LAEFC,KAAKC,MAAMnB,a,+BAGH,IACAM,EAAaY,KAAKC,MAAlBb,SACR,OACE,kBAACU,EAAD,UACqBR,IAAlBF,EAASM,MAAsBN,EAASM,KAAKF,OAAS,EACrD,oCACE,kBAAC,UAAD,CAAUJ,SAAUA,EAASM,QAG/B,Q,GAdmBQ,aAyBdC,uBAJS,SAAAC,GAAK,MAAK,CAChChB,SAAUgB,EAAMhB,YAKhB,CAAEN,qBAFWqB,CAGbJ","file":"static/js/8.8c2fcb48.chunk.js","sourcesContent":["import { ADD_DATA_REQUEST, READ_DATA_REQUEST } from './types';\r\n\r\nexport const addData = payload => ({\r\n  type: ADD_DATA_REQUEST,\r\n  payload\r\n});\r\n\r\nexport const readData = () => ({\r\n  type: READ_DATA_REQUEST\r\n});\r\n","import React from 'react';\r\nimport { Pie } from 'react-chartjs-2';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: 50%;\r\n  height: 500px;\r\n  @media only screen and (max-width: 768px) {\r\n    width: 100%;\r\n    height: 300px;\r\n  }\r\n`;\r\n\r\nconst PieChart = ({ feedback }) => {\r\n  const labelData = ['Yes', 'No'];\r\n  const datasetData = [0, 0];\r\n  if (feedback !== undefined) {\r\n    for (let i = 0; i < feedback.length; i++) {\r\n      if (feedback[i].response === 'Yes') datasetData[0]++;\r\n      else datasetData[1]++;\r\n    }\r\n  }\r\n\r\n  const data = {\r\n    labels: labelData,\r\n    datasets: [\r\n      {\r\n        data: datasetData,\r\n        backgroundColor: ['#2ecc71', '#e74c3c']\r\n      }\r\n    ]\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Pie data={data} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { readData } from './actions';\r\nimport PieChart from '../components/charts/PieChart';\r\nimport styled from 'styled-components';\r\n\r\nconst ChartContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nclass FeedbackResult extends Component {\r\n  componentDidMount() {\r\n    this.props.readData();\r\n  }\r\n\r\n  render() {\r\n    const { feedback } = this.props;\r\n    return (\r\n      <ChartContainer>\r\n        {feedback.data !== undefined && feedback.data.length > 0 ? (\r\n          <>\r\n            <PieChart feedback={feedback.data} />\r\n          </>\r\n        ) : (\r\n          ''\r\n        )}\r\n      </ChartContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  feedback: state.feedback\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { readData }\r\n)(FeedbackResult);\r\n"],"sourceRoot":""}